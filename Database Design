
http://www.uml-diagrams.org/class-diagrams-overview.html

BRIEF
====
Make a website for an online repository for reserving and requesting books from a physical library


SPECIFICATION
=============
A website (developed using HTML, CSS and Javascript) to facilitate the following
  1 - Allow end user to find a book from a list of available books (Search engine)
  2 - Allow end user to reserve a book once found (resource allocator)
  3 - If requested book cannot be found, a system to inform the library of a book they wish to to see included in the library (Request form).
  
Assumptions
-----------
The returning of books will be done physically. 
This specification is for the search engine display.
The database creation and population will be handled in another design doc.
Display will be handled in another design doc.

Optional additions
----------
   1 - reservation extention. 
   2 - Book rank based search (see information on Google page rank)
   
Objects
-------
Book Object
	parameters
	- Array book_Details: [book_Name, book_UID, book_Author, book_Status, book_Condition]* : string
	- quantity : int
	- quantity_Lent: int
	- Array reserved_By: User Object
	
	methods
	- add_Reservation (User user)
	- remove_Reservation (User user) 
	

	
Book_List Object 
	parameters
	- Array books: Book object
	- Array requested_Books: Book Object
	
	methods 
	- search_Books (String book_Name, String book_UID, String book_Author, String book_Status, String book_Condition)
	- reserve_Book (int Index, User user)
	- request_Book (String book_Name, String book_UID, String book_Author, User user,)

* The variables listed are parameters for the constructor.	

User Object 
	parameters
	- email : string 
	- password : string 
	- logged_in : boolean
	
	methods
	

DESIGN
======

Main Options
-----------------
  1 - Search for Book
  2 - Reserve book
  3 - Request book added to library
  4 - Display list
  5 - User Login / Sign up
  
Refinements
--------------
  1 -  Search for book
    1.1 - Ask user for search details
      1.1.1 - Field : Search for book by name
      1.1.2 - Field : Search for book by Unique ID (UID*)
        1.1.2.1 - UID may be determined by ISDN number or by Library specific barcoding system. Parameter : book_UID
      1.1.2 - Field : Search for book by Author 
      1.1.3 - Field (Radial selection): Search for book by Status
        1.1.3.1 - Status Parameters may include: default =instock, lent, and conditions like default = good, average, in need of repair.
 
    1.2 - Perform Search with  parameters: set book_Details = [book_Name, book_UID, book_Author, book_Status, book_Condition] 
      
	  1.2.1 - Start loop; set counter to 0; condition: counter < book_Details.length
	    1.2.1.2 - Condition: book_Details[counter] == null; Action: book_Details = '*' 											// searches for blanks, replaces with '*'
      1.2.2 - End loop.
		
      1.2.3 - Test search condition parameters against Book_List²
		1.2.3.1 - initialise query_List as a list of books
		  1.2.3.1.1 - Start Loop: set counter1 to 0; condition: counter1 < Book_List.length
			1.2.3.1.1.1 - Start Loop: set counter2 to 0 condition: counter2 < book_Details.length
			  1.2.3.1.1.1.1 - condition: book_Details[counter2] == Book_List[counter1].book_Details[counter2] or book_Details[counter2] == '*'
			    1.2.3.1.1.1.1.1 - Action: condition: query_List is not empty and Book_List[counter1] != query_List.last
			      1.2.3.1.1.1.1.1.1 - Action: add Book_List[counter1] to query_List
			1.2.3.1.1.2 - End Loop
		  1.2.3.1.1 - End Loop
	
	1.3 - return Book_List to display.
  
  2 - Reserve book  - (book_UID)
	
  2 - Reserve book  - (book_UID)
    2.1 - Run search with book_UID as parameter [1.2]
    2.2 - Condition : End user is not signed in //Not necessary
      2.2.1 - Ask user to sign in [5.0]
    2.3 - Button : Reserve book 
	
  3 - Request A Book added to the Library


  5 - User Login / Sign Up 
	5.1 - Textbox: Email entered here
	5.2 - protected Textbox: password entered here
	5.3 - button: Sign in
	5.5 - button: Sign up/Register

¹May need to place them in array to improve coding efficiency ( might keep it to improve workflow efficiency
² Book_List derived from designing the "Database" 
³ variable name = book_Details


